# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [
    # config.boot.kernelPackages.rtl8188eus-aircrack
    config.boot.kernelPackages.rtl8852au
    # config.boot.kernelPackages.rtl8852bu
  ];

  # services.udev.extraRules =
  #   # Switch Archer ax1800U Nano from CDROM mode (default) to WiFi mode.
  #   ''
  #     ATTR{idVendor}=="0bda", ATTR{idProduct}=="1a2b", RUN+="${
  #       lib.getExe pkgs.usb-modeswitchx
  #     } -K -v 0bda -p 1a2b"
  #   '';

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/34197c02-19aa-4176-83ba-652edf72b1a0";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/FDB7-5CF1";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/3ff00db8-aef8-440a-9430-ac688887e0a4"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f0u7.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
